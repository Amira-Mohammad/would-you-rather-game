{"version":3,"sources":["components/dashboard/unAnsweredQuestions/UnAnsweredQuestions.js","components/dashboard/answeredQuestions/AnsweredQuestions.js","components/navBar/NavBar.js","imgs/avatar1","imgs/avatar2","utils/_DATA.js","imgs/avatar3.avif","utils/api.js","Actions/Users.js","Actions/Questions.js","Actions/index.js","components/dashboard/Dashboard.js","components/login/Login.js","components/home/Home.js","components/newQuestion/NewQuestion.js","components/leaderBoard/LeaderBoard.js","components/dashboard/questionDetails/QuestionDetails.js","components/dashboard/questionPoll/QuestionPoll.js","App.js","components/notFound/NotFound.js","reportWebVitals.js","Reducers/index.js","Reducers/users.js","Reducers/questions.js","Middlewares/logger.js","Middlewares/index.js","index.js"],"names":["UnAnsweredQuestions","props","_props$Q$optionOne","_props$Q$optionTwo","_jsx","children","_jsxs","Card","className","CardTitle","Q","author","style","width","height","alt","src","avatar","optionOne","text","optionTwo","Link","to","pathname","id","state","questionProps","AnsweredQuestions","connect","_ref","users","type","loginUser","sarahedo","name","avatarURL","answers","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","tylermcginnis","avatar2","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","johndoe","avatar1","timestamp","votes","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","_objectSpread","_defineProperty","concat","answerQuestion","answer","_ref2","qid","_saveQuestionAnswer","RECEIVE_USERS","SET_LOGIN_USER","SAVE_USER_ANSWER","RECEIVE_QUESTION","ADD_QUESTION","SAVE_Q_ANSWER","handleInitialData","dispatch","all","then","_slicedToArray","receiveUsers","receiveQuestion","handleAnswerQuestion","saveQuestionAnswer","user","saveUserAnswer","handleAddQuestion","getState","info","addQuestion","_useState","useState","_useState2","currentLoginUser","setCurrentLoginUser","_useState3","_useState4","unAnsweredQuestion","setUnAnsweredQuestion","_useState5","_useState6","AnsweredQuestion","setAnsweredQuestion","useEffect","currentLogin","Object","entries","forEach","userFormLoop","unAnswered_Question","answered_Question","length","questionFormLoop","hasOwnProperty","push","_useState7","_useState8","activeTab","setActiveTab","toggle","tab","_Fragment","NavBar","Nav","tabs","NavItem","NavLink","classnames","active","onClick","TabContent","TabPane","tabId","Row","Col","sm","sort","a","b","map","question_UnAnswered","question_Answered","Login","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","redirectToReferrer","changeLoginUser","bind","_assertThisInitialized","_createClass","key","value","e","this","setState","target","setLoginUser","prevProps","from","location","Redirect","onChange","defaultChecked","keys","event","preventDefault","Component","Home","Dashboard","NewQuestion","handleChangeOption","_e$target","handleSubmitOption","history","_this$state","FirstOption","SecondOption","Navbar","onSubmit","placeholder","required","sortedUsers","values","x1","usersData","setUsersData","user_data","userDataItem","answersCount","questionCount","QuestionDetails","handleChange","_this$props$location$","_this$props$location$2","_this2","questionProps_Data","htmlFor","exampleRadios","islogin","answerMarkOp1","includes","answerMarkOp2","Badge","pill","variant","ProgressBar","label","NotFound","PrivateRoute","component","rest","_objectWithoutProperties","_excluded","Route","render","BrowserRouter","basename","Switch","exact","path","LeaderBoard","QuestionPoll","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","arguments","undefined","action","logger","store","next","console","group","log","returnValue","groupEnd","applyMiddleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","middleware","ReactDOM","React","StrictMode","Provider","App","document","getElementById"],"mappings":"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","file":"static/js/main.8c483a9c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, CardTitle } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport './UnAnsweredQuestions.css'\r\nconst UnAnsweredQuestions = (props) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"p-0 m-2\" >\r\n                <CardTitle className=\"bg_colors_2 text-white fw-bold text-start p-2 \">{props.Q.author} Asks</CardTitle>\r\n                <div className=\"p-2\">\r\n                    <div className=\"d-flex\">\r\n\r\n                        {/* <div className=\"imgAvatar border-success d-flex flex-column justify-content-center rounded-circle border\">\r\n                            {props.Q.author}\r\n                        </div> */}\r\n                        <img className=\"border border-success rounded-circle p-1\" style={{ width: 100, height: 100 }} alt=\"avatar\" src={props.avatar} />\r\n                        <div className=\"px-3 border-end border-success\"> <span className=\"visually-hidden\">ssssssss</span></div>\r\n\r\n                        <div className=\"w-75\">\r\n                            <div className=\"fw-bold bgLightColor\">Would You Rather</div>\r\n                            <div className=\"QuestionTitle my-2\">\r\n\r\n\r\n                                {/* {props.Q.id} */}\r\n                                <div>{props.Q.optionOne?.text}</div>\r\n                                <div>{props.Q.optionTwo?.text}</div>\r\n\r\n                            </div>\r\n\r\n                            <Link className=\"btn px-5\"\r\n                                to={{ pathname: \"/questions/\" + props.Q.id, state: { questionProps: props.Q } }}\r\n                            //to={\"/questionDetails/\" + props.Q.id}\r\n                            >View and Vote</Link>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UnAnsweredQuestions;","import React from 'react';\r\nimport { Card, CardTitle } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nconst AnsweredQuestions = (props) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"p-0 \" >\r\n                <CardTitle className=\"bg_colors_2 text-white fw-bold text-start p-2 \">{props.Q.author} Asks</CardTitle>\r\n                <div className=\"p-2\">\r\n                    <div className=\"d-flex\">\r\n                        <img className=\"border border-success rounded-circle p-1\" style={{ width: 100, height: 100 }} alt=\"avatar\" src={props.avatar} />\r\n                        {/* <div className=\"imgAvatar border-success d-flex flex-column justify-content-center rounded-circle border\">\r\n                            {props.Q.author}\r\n                        </div> */}\r\n                        <div className=\"w-75\">\r\n                            <div className=\"fw-bold bgLightColor\">Would You Rather</div>\r\n                            <div className=\"QuestionTitle my-2\">\r\n                                <div>{props.Q.optionOne.text}</div>\r\n                                <div>{props.Q.optionTwo.text}</div>\r\n                            </div>\r\n                            <Link className=\"btn px-5\"\r\n                                to={{ pathname: \"/questions/\" + props.Q.id, state: { questionProps: props.Q } }}\r\n                            //to=\"/questionPoll\"\r\n                            >\r\n                                View Poll\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnsweredQuestions;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nconst NavBar = (props) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg_colors_2 \">\r\n      <div className=\"container-fluid\">\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarNavAltMarkup\"\r\n          aria-controls=\"navbarNavAltMarkup\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <Link className=\"navbar-brand\" to=\"/dashboard\">\r\n          Dashboard\r\n        </Link>\r\n        <div\r\n          className=\"collapse navbar-collapse d-flex justify-content-between\"\r\n          id=\"navbarNavAltMarkup\"\r\n        >\r\n          <div className=\"navbar-nav \">\r\n            <Link className=\"nav-link active\" to=\"/add\">\r\n              New Question\r\n            </Link>\r\n            <Link className=\"nav-link \" to=\"/leaderboard\">\r\n              leader Board\r\n            </Link>\r\n            <Link className=\"nav-link \" to=\"/\">\r\n              log Out\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            Hello <span className=\"fw-bold\">{props.users.loginUser}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps({ users }) {\r\n  return {\r\n    users,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavBar);\r\n","export default __webpack_public_path__ + \"static/media/avatar1.3d218236.bin\";","export default __webpack_public_path__ + \"static/media/avatar2.0f1a2a64.bin\";","import avatar1 from \"../imgs/avatar1\";\r\nimport avatar2 from \"../imgs/avatar2\";\r\nimport avatar3 from \"../imgs/avatar3.avif\";\r\nlet users = {\r\n  sarahedo: {\r\n    id: \"sarahedo\",\r\n    name: \"Sarah Edo\",\r\n    avatarURL: avatar3,\r\n    answers: {\r\n      \"8xf0y6ziyjabvozdd253nd\": \"optionOne\",\r\n      \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\r\n      am8ehyc8byjqgar0jgpub9: \"optionTwo\",\r\n      loxhs1bqm25b708cmbf3g: \"optionTwo\",\r\n    },\r\n    questions: [\"8xf0y6ziyjabvozdd253nd\", \"am8ehyc8byjqgar0jgpub9\"],\r\n  },\r\n  tylermcginnis: {\r\n    id: \"tylermcginnis\",\r\n    name: \"Tyler McGinnis\",\r\n    avatarURL: avatar2,\r\n    answers: {\r\n      vthrdm985a262al8qx3do: \"optionOne\",\r\n      xj352vofupe1dqz9emx13r: \"optionTwo\",\r\n    },\r\n    questions: [\"loxhs1bqm25b708cmbf3g\", \"vthrdm985a262al8qx3do\"],\r\n  },\r\n  johndoe: {\r\n    id: \"johndoe\",\r\n    name: \"John Doe\",\r\n    avatarURL: avatar1,\r\n    answers: {\r\n      xj352vofupe1dqz9emx13r: \"optionOne\",\r\n      vthrdm985a262al8qx3do: \"optionTwo\",\r\n      \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\r\n    },\r\n    questions: [\"6ni6ok3ym7mf1p33lnez\", \"xj352vofupe1dqz9emx13r\"],\r\n  },\r\n};\r\n\r\nlet questions = {\r\n  \"8xf0y6ziyjabvozdd253nd\": {\r\n    id: \"8xf0y6ziyjabvozdd253nd\",\r\n    author: \"sarahedo\",\r\n    timestamp: 1467166872634,\r\n    optionOne: {\r\n      votes: [\"sarahedo\"],\r\n      text: \"have horrible short term memory\",\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: \"have horrible long term memory\",\r\n    },\r\n  },\r\n  \"6ni6ok3ym7mf1p33lnez\": {\r\n    id: \"6ni6ok3ym7mf1p33lnez\",\r\n    author: \"johndoe\",\r\n    timestamp: 1468479767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: \"become a superhero\",\r\n    },\r\n    optionTwo: {\r\n      votes: [\"johndoe\", \"sarahedo\"],\r\n      text: \"become a supervillain\",\r\n    },\r\n  },\r\n  am8ehyc8byjqgar0jgpub9: {\r\n    id: \"am8ehyc8byjqgar0jgpub9\",\r\n    author: \"sarahedo\",\r\n    timestamp: 1488579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: \"be telekinetic\",\r\n    },\r\n    optionTwo: {\r\n      votes: [\"sarahedo\"],\r\n      text: \"be telepathic\",\r\n    },\r\n  },\r\n  loxhs1bqm25b708cmbf3g: {\r\n    id: \"loxhs1bqm25b708cmbf3g\",\r\n    author: \"tylermcginnis\",\r\n    timestamp: 1482579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: \"be a front-end developer\",\r\n    },\r\n    optionTwo: {\r\n      votes: [\"sarahedo\"],\r\n      text: \"be a back-end developer\",\r\n    },\r\n  },\r\n  vthrdm985a262al8qx3do: {\r\n    id: \"vthrdm985a262al8qx3do\",\r\n    author: \"tylermcginnis\",\r\n    timestamp: 1489579767190,\r\n    optionOne: {\r\n      votes: [\"tylermcginnis\"],\r\n      text: \"find $50 yourself\",\r\n    },\r\n    optionTwo: {\r\n      votes: [\"johndoe\"],\r\n      text: \"have your best friend find $500\",\r\n    },\r\n  },\r\n  xj352vofupe1dqz9emx13r: {\r\n    id: \"xj352vofupe1dqz9emx13r\",\r\n    author: \"johndoe\",\r\n    timestamp: 1493579767190,\r\n    optionOne: {\r\n      votes: [\"johndoe\"],\r\n      text: \"write JavaScript\",\r\n    },\r\n    optionTwo: {\r\n      votes: [\"tylermcginnis\"],\r\n      text: \"write Swift\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction generateUID() {\r\n  return (\r\n    Math.random().toString(36).substring(2, 15) +\r\n    Math.random().toString(36).substring(2, 15)\r\n  );\r\n}\r\n\r\nexport function _getUsers() {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({ ...users }), 1000);\r\n  });\r\n}\r\n\r\nexport function _getQuestions() {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({ ...questions }), 1000);\r\n  });\r\n}\r\n\r\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\r\n  return {\r\n    id: generateUID(),\r\n    timestamp: Date.now(),\r\n    author,\r\n    optionOne: {\r\n      votes: [],\r\n      text: optionOneText,\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: optionTwoText,\r\n    },\r\n  };\r\n}\r\n\r\nexport function _saveQuestion(question) {\r\n  return new Promise((res, rej) => {\r\n    const authedUser = question.author;\r\n    const formattedQuestion = formatQuestion(question);\r\n\r\n    setTimeout(() => {\r\n      questions = {\r\n        ...questions,\r\n        [formattedQuestion.id]: formattedQuestion,\r\n      };\r\n\r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          questions: users[authedUser].questions.concat([formattedQuestion.id]),\r\n        },\r\n      };\r\n\r\n      res(formattedQuestion);\r\n    }, 1000);\r\n  });\r\n}\r\n\r\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => {\r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          answers: {\r\n            ...users[authedUser].answers,\r\n            [qid]: answer,\r\n          },\r\n        },\r\n      };\r\n\r\n      questions = {\r\n        ...questions,\r\n        [qid]: {\r\n          ...questions[qid],\r\n          [answer]: {\r\n            ...questions[qid][answer],\r\n            votes: questions[qid][answer].votes.concat([authedUser]),\r\n          },\r\n        },\r\n      };\r\n\r\n      res();\r\n    }, 500);\r\n  });\r\n}\r\n","export default __webpack_public_path__ + \"static/media/avatar3.fe96b816.avif\";","import {\r\n  _getUsers,\r\n  _getQuestions,\r\n  _saveQuestion,\r\n  _saveQuestionAnswer\r\n\r\n} from './_DATA.js'\r\n\r\nexport function getInitialData() {\r\n  return Promise.all([\r\n    _getUsers(),\r\n    _getQuestions(),\r\n  ]).then(([users, questions]) => ({\r\n    users,\r\n    questions,\r\n  }))\r\n}\r\n\r\n// export function saveLikeToggle (info) {\r\n//   return _saveLikeToggle(info)\r\n// }\r\n\r\nexport function saveQuestion(info) {\r\n  return _saveQuestion(info)\r\n}\r\n\r\nexport function answerQuestion(answer) {\r\n  return _saveQuestionAnswer(answer)\r\n}","export const RECEIVE_USERS = 'RECEIVE_USERS';\r\nexport const SET_LOGIN_USER = 'SET_LOGIN_USER';\r\nexport const SAVE_USER_ANSWER = 'SAVE_USER_ANSWER';\r\n\r\nexport function receiveUsers(users) {\r\n    return {\r\n        type: RECEIVE_USERS,\r\n        users\r\n    }\r\n\r\n}\r\n\r\nexport function setLoginUser(loginUser) {\r\n    return {\r\n        type: SET_LOGIN_USER,\r\n        loginUser\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function saveUserAnswer(user, qid, answer) {\r\n    return {\r\n        type: SAVE_USER_ANSWER,\r\n        user,\r\n        qid,\r\n        answer\r\n    }\r\n}","export const RECEIVE_QUESTION = 'RECEIVE_QUESTION';\r\nexport const ADD_QUESTION = 'ADD_QUESTION';\r\nexport const SAVE_Q_ANSWER = 'SAVE_Q_ANSWER';\r\n\r\n\r\nexport function receiveQuestion(questions) {\r\n    return {\r\n        type: RECEIVE_QUESTION,\r\n        questions\r\n    }\r\n\r\n}\r\n\r\nexport function addQuestion(question) {\r\n\r\n    return {\r\n        type: ADD_QUESTION,\r\n        question\r\n    }\r\n\r\n}\r\n\r\nexport function saveQuestionAnswer(authedUser, qid, answer, loginUser) {\r\n\r\n    return {\r\n        type: SAVE_Q_ANSWER,\r\n        authedUser,\r\n        qid,\r\n        answer,\r\n        loginUser\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { getInitialData } from '../utils/api';\r\nimport { receiveUsers, saveUserAnswer } from './Users';\r\nimport { receiveQuestion } from './Questions';\r\nimport { saveQuestion, answerQuestion } from '../utils/api';\r\nimport { addQuestion, saveQuestionAnswer } from './Questions'\r\n\r\n\r\nexport function handleInitialData() {\r\n    return (dispatch) => {\r\n        return getInitialData().then(({ users, questions }) => {\r\n            dispatch(receiveUsers(users))\r\n            dispatch(receiveQuestion(questions))\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport function handleAnswerQuestion(authedUser, qid, answer, loginUser) {\r\n    return (dispatch) => {\r\n\r\n        dispatch(saveQuestionAnswer(authedUser, qid, answer, loginUser))\r\n        dispatch(saveUserAnswer(authedUser, qid, answer))\r\n        return answerQuestion(\r\n            {\r\n                authedUser,\r\n                qid,\r\n                answer\r\n\r\n            }\r\n\r\n        )\r\n        // .then(() => {\r\n        //     dispatch(saveQuestionAnswer({ authedUser, qid, answer }))\r\n        // })\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function handleAddQuestion(optionOne, optionTwo, author) {\r\n    return (dispatch, getState) => {\r\n        return saveQuestion(\r\n            {\r\n                optionOneText: optionOne,\r\n                optionTwoText: optionTwo,\r\n                author,\r\n            }\r\n            //     {\r\n            //     optionOne,\r\n            //     optionTwo,\r\n            //     author\r\n            // }\r\n        ).then((question) => {\r\n            dispatch(addQuestion(question))\r\n        })\r\n\r\n    }\r\n\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport UnAnsweredQuestions from './unAnsweredQuestions/UnAnsweredQuestions';\r\nimport AnsweredQuestions from './answeredQuestions/AnsweredQuestions';\r\nimport NavBar from '../navBar/NavBar';\r\nimport { connect } from 'react-redux'\r\nimport { handleInitialData } from '../../Actions/index'\r\nimport './Dashboard.scss'\r\n\r\nconst Dashboard = (props) => {\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // const questionsForLoop = Object.entries(props.questions);\r\n    // const usersForLoop = Object.entries(props.users.users);\r\n\r\n    // const questions_UnAnswered = [];\r\n    // const questions_Answered = [];\r\n\r\n\r\n\r\n    // let currentLogin = {}\r\n    // usersForLoop.forEach((userFormLoop) => {\r\n\r\n    //     if (userFormLoop[0] === props.users.loginUser) {\r\n    //         currentLogin = userFormLoop\r\n    //     }\r\n\r\n    // })\r\n\r\n\r\n\r\n    // questionsForLoop.forEach((questionFormLoop) => {\r\n    //     if (currentLogin[1].answers.hasOwnProperty(questionFormLoop)) {\r\n\r\n    //         //     if (currentLogin[1].answers.includes(questionFormLoop)[0]) {\r\n    //         questions_Answered.push(questionFormLoop[1])\r\n\r\n    //        \r\n\r\n    //     } else {\r\n    //         questions_UnAnswered.push(questionFormLoop[1])\r\n    //     }\r\n\r\n    // })\r\n\r\n    // function currentLoginUser(logInUser) {\r\n    //     return logInUser.id === props.users.loginUser;\r\n    // }\r\n\r\n\r\n    // const result = Object.keys(props.users.users).find((logInUser) => logInUser.id === props.users.loginUser);\r\n\r\n    const [currentLoginUser, setCurrentLoginUser] = useState([]);\r\n    const [unAnsweredQuestion, setUnAnsweredQuestion] = useState([]);\r\n    const [AnsweredQuestion, setAnsweredQuestion] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let currentLogin = {}\r\n        Object.entries(props.users.users).forEach((userFormLoop) => {\r\n            if (userFormLoop[0] === props.users.loginUser) {\r\n                currentLogin = userFormLoop\r\n                return\r\n            }\r\n        }\r\n        )\r\n        setCurrentLoginUser(currentLogin)\r\n\r\n        // props.handleInitialData()\r\n        // if (!props.question) {\r\n\r\n\r\n        //     setQuestion(props.questions)\r\n\r\n        // }\r\n\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const unAnswered_Question = [];\r\n        const answered_Question = [];\r\n        if (currentLoginUser.length !== 0 && currentLoginUser !== null) {\r\n            Object.entries(props.questions).forEach((questionFormLoop) => {\r\n\r\n                if (currentLoginUser[1].answers.hasOwnProperty(questionFormLoop[0])) {\r\n                    answered_Question.push(questionFormLoop[1])\r\n\r\n                } else {\r\n                    unAnswered_Question.push(questionFormLoop[1])\r\n                }\r\n\r\n            }\r\n\r\n            )\r\n\r\n\r\n\r\n            setUnAnsweredQuestion(unAnswered_Question);\r\n            setAnsweredQuestion(answered_Question)\r\n        }\r\n\r\n    }, [props.questions, currentLoginUser])\r\n\r\n\r\n\r\n    const [activeTab, setActiveTab] = useState('1');\r\n\r\n    const toggle = tab => {\r\n        if (activeTab !== tab) setActiveTab(tab);\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <NavBar />\r\n\r\n            <div className=\"container col-6 col-center mt-5 border p-2\">\r\n\r\n                <Nav className=\"justify-content-center\" tabs>\r\n                    <NavItem className=\"w-50\">\r\n                        <NavLink\r\n                            className={classnames({ active: activeTab === '1' })}\r\n                            onClick={() => { toggle('1'); }}\r\n                        >\r\n                            UnAnswered Questions\r\n\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem className=\"w-50 border-bottom\">\r\n                        <NavLink\r\n                            className={classnames({ active: activeTab === '2' })}\r\n                            onClick={() => { toggle('2'); }}\r\n                        >\r\n                            Answered Questions\r\n                        </NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n                <TabContent activeTab={activeTab}>\r\n                    <TabPane tabId=\"1\">\r\n                        <Row className=\"mt-4\">\r\n\r\n\r\n                            <Col sm=\"12\">\r\n\r\n                                {unAnsweredQuestion.sort((a, b) => b.timestamp - a.timestamp)\r\n                                    .map((question_UnAnswered) => {\r\n                                        return (\r\n                                            <UnAnsweredQuestions\r\n                                                key={question_UnAnswered.id}\r\n                                                avatar={currentLoginUser[1].avatarURL}\r\n                                                Q={question_UnAnswered} />\r\n\r\n                                        )\r\n                                    })\r\n\r\n                                }\r\n                            </Col>\r\n                            {/* <Col sm=\"12\">\r\n\r\n                                {Object.keys(props.questions).sort((a, b) => props.questions[b].timestamp - props.questions[a].timestamp)\r\n                                    .map((Q) => {\r\n                                        return (<UnAnsweredQuestions\r\n                                            avatar={Object.entries(currentLogin)[1][1].avatarURL}\r\n                                            key={Q} usersData={props.users} Q={props.questions[Q]} />\r\n\r\n                                        )\r\n                                    })}\r\n                            </Col> */}\r\n                        </Row>\r\n                    </TabPane>\r\n                    <TabPane tabId=\"2\">\r\n                        <Row className=\"mt-4\">\r\n\r\n                            <Col sm=\"12\">\r\n                                {AnsweredQuestion.sort((a, b) => b.timestamp - a.timestamp).map((question_Answered) => {\r\n                                    return (<AnsweredQuestions\r\n                                        key={question_Answered.id}\r\n                                        avatar={currentLoginUser[1].avatarURL}\r\n                                        Q={question_Answered}\r\n                                    />\r\n\r\n                                    )\r\n                                })\r\n                                }\r\n\r\n                            </Col>\r\n\r\n                            {/* <Col sm=\"12\">\r\n                                {Object.keys(props.questions).map((Q) => {\r\n                                    return (<AnsweredQuestions key={Q} Q={props.questions[Q]} />\r\n\r\n                                    )\r\n                                })\r\n                                }\r\n\r\n                            </Col> */}\r\n                        </Row>\r\n                    </TabPane>\r\n                </TabContent>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps({ questions, users }) {\r\n\r\n    return {\r\n        questions,\r\n        users\r\n\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleInitialData: () => {\r\n            dispatch(handleInitialData())\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","import React, { Component } from 'react';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport './login.scss'\r\nimport { connect } from 'react-redux';\r\nimport { handleInitialData } from '../../Actions/index';\r\nimport { setLoginUser } from '../../Actions/Users'\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: {},\r\n            loginUser: '',\r\n            redirectToReferrer: false\r\n        };\r\n\r\n        this.changeLoginUser = this.changeLoginUser.bind(this);\r\n    }\r\n\r\n    changeLoginUser(e) {\r\n        this.setState({\r\n            loginUser: e.target.value,\r\n            redirectToReferrer: true\r\n        });\r\n        this.props.setLoginUser(e.target.value)\r\n        // if (this.props.loginUser == undefined) {\r\n        //     this.props.loginUser = this.state.loginUser\r\n\r\n        // }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.handleInitialData()\r\n\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.users !== this.props.users) {\r\n            this.setState({\r\n                users: this.props.users\r\n            })\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    render() {\r\n        const { redirectToReferrer } = this.state\r\n        const { from } = this.props.location.state || { from: { pathname: '/' } }\r\n        if (redirectToReferrer === true && from.pathname !== '/') {\r\n            return <Redirect to={from} />\r\n        }\r\n\r\n        return (\r\n            <div className=\"container mt-5\">\r\n                <div className=\"card col-6  col-center\">\r\n                    <div className=\"card-header\">\r\n                        <h5>Welcome to the (Would You Rathar) Game</h5>\r\n                        <h6>Please Sign In or Sign Up to continue</h6>\r\n                    </div>\r\n                    <div className=\"card-body d-flex flex-column\">\r\n                        <h5 className=\"card-title baseColor\">Sign In</h5>\r\n                        <div className=\"card-text fw-bold\">Do already have an account?</div>\r\n                        <select className=\"d-block form-control my-3\" onChange={this.changeLoginUser} value={this.state.loginUser}>\r\n                            <option defaultChecked>please Select</option>\r\n                            {Object.keys(this.state.users).length > 0 &&\r\n                                Object.keys(this.state.users.users).map((user) => {\r\n\r\n\r\n                                    return (\r\n\r\n                                        <option key={user}>{user}</option>\r\n\r\n\r\n                                    )\r\n                                })}\r\n                        </select>\r\n\r\n\r\n                        {\r\n                            this.state.loginUser === ''\r\n                                ? <Link to={{ pathname: \"/dashboard\", state: { loginUser: this.state.loginUser } }}\r\n                                    className=\"btn px-5\"\r\n                                    onClick={(event) => event.preventDefault()}>\r\n                                    Sign In\r\n                                </Link>\r\n                                : <Link className=\"btn px-5\"\r\n                                    to={{\r\n                                        pathname: \"/dashboard\"\r\n                                        , state: { loginUser: this.state.loginUser }\r\n                                    }}\r\n                                >Sign In</Link>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps({ users }) {\r\n\r\n\r\n    return {\r\n        users,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleInitialData: () => {\r\n            dispatch(handleInitialData())\r\n        },\r\n        setLoginUser: (user) => {\r\n            dispatch(setLoginUser(user))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React from 'react';\r\nimport Dashboard from '../dashboard/Dashboard';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <Dashboard />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\nimport { Card, CardTitle } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleAddQuestion } from \"../../Actions\";\r\nimport Navbar from \"../navBar/NavBar\";\r\nimport \"./NewQuestion.css\";\r\n\r\nclass NewQuestion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      FirstOption: \"\",\r\n      SecondOption: \"\",\r\n    };\r\n    this.handleChangeOption = this.handleChangeOption.bind(this);\r\n  }\r\n\r\n  handleChangeOption = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState(() => ({\r\n      ...this.state,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  handleSubmitOption = (e) => {\r\n    e.preventDefault();\r\n    const { history } = this.props;\r\n    const { dispatch } = this.props;\r\n    const { FirstOption, SecondOption } = this.state;\r\n\r\n    dispatch(\r\n      handleAddQuestion(FirstOption, SecondOption, this.props.users.loginUser)\r\n    );\r\n    this.setState(() => ({\r\n      FirstOption: \"\",\r\n      SecondOption: \"\",\r\n    }));\r\n\r\n    history.push(\"/dashboard\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid p-0\">\r\n        <Navbar />\r\n        <Card className=\"p-0  col-6  col-center \">\r\n          <CardTitle className=\"border-bottom text-body text-center fw-bold  p-2 \">\r\n            <h4>Create New Question</h4>\r\n          </CardTitle>\r\n          <div className=\"p-2\">\r\n            <form onSubmit={this.handleSubmitOption}>\r\n              <div className=\"card-body d-flex flex-column\">\r\n                <div className=\"fw-bold bgLightColor\">Would You Rather</div>\r\n                <input\r\n                  placeholder=\"Enter Option One Text Here\"\r\n                  name=\"FirstOption\"\r\n                  type=\"text\"\r\n                  className=\"form-control my-2\"\r\n                  value={this.state.FirstOption}\r\n                  //onChange={(e) => handleChangeOption(e.target.value)}\r\n                  onChange={this.handleChangeOption}\r\n                  required\r\n                />\r\n                <div className=\"my-2\">OR</div>\r\n                <input\r\n                  placeholder=\"Enter Option Two Text Here\"\r\n                  name=\"SecondOption\"\r\n                  type=\"text\"\r\n                  className=\"form-control my-2\"\r\n                  value={this.state.SecondOption}\r\n                  //  onChange={(e) => handleChangeOption(e.target.value)}\r\n                  onChange={this.handleChangeOption}\r\n                  required\r\n                />\r\n                <button type=\"submit\" className=\"btn px-5 my-2\">\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps({ questions, users }) {\r\n  return {\r\n    questions,\r\n    users,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(NewQuestion);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card } from 'reactstrap';\r\nimport NavBar from '../navBar/NavBar';\r\nimport { connect } from 'react-redux';\r\n//import { handleInitialData } from '../../Actions/index';\r\nimport './LeaderBoard.css'\r\n\r\nconst LeaderBoard = (props) => {\r\n\r\n    const [usersData, setUsersData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let user_data = [];\r\n\r\n        Object.entries(props.sortedUsers).forEach((userDataItem) => {\r\n            // if (userFormLoop[0] === props.users.loginUser) {\r\n            user_data.push(userDataItem)\r\n\r\n            // }\r\n\r\n        })\r\n        setUsersData(user_data)\r\n        // setCurrentLoginUser(currentLogin)\r\n\r\n\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            {\r\n                usersData.map((user) => {\r\n\r\n                    const answersCount = Object.keys(user[1].answers).length\r\n                    const questionCount = Object.keys(user[1].questions).length\r\n\r\n                    return (\r\n                        <Card key={user[1].id} className=\" Card p-0 container col-6 col-center my-2\" >\r\n                            <div className=\"p-2\">\r\n                                <div className=\"d-flex \">\r\n                                    <img className=\"border border-success rounded-circle p-1\"\r\n                                        style={{ width: 100, height: 100 }} alt=\"avatar\"\r\n                                        src={user[1].avatarURL}\r\n                                    />\r\n                                    <div className=\"px-3 border-end\"> <span className=\"visually-hidden\">ssssssss</span></div>\r\n                                    <div className=\"w-75 border-end  px-3\">\r\n                                        <div className=\"fw-bold bgLightColor\">{user[1].name}</div>\r\n                                        <div className=\"d-flex justify-content-around\">\r\n                                            <div>Answered Questions</div>\r\n                                            <div>{answersCount}</div>\r\n                                        </div>\r\n\r\n                                        <div className=\"d-flex justify-content-around\">\r\n                                            <div>Created Questions</div>\r\n                                            <div>{questionCount}</div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"px-3\">\r\n                                        <div className=\"card\" >\r\n                                            <div className=\"bg-light p-3 border-bottom\">Score</div>\r\n                                            <div className=\"card-body d-flex justify-content-center text-light\">\r\n                                                <div className=\"score card-text border rounded-circle bg-success\">\r\n                                                    {answersCount + questionCount}\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Card>\r\n                    )\r\n\r\n\r\n                })\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps({ users, questions }) {\r\n    const sortedUsers = (Object.values(users.users)).sort((a, b) => {\r\n        const x1 = (Object.keys(a.answers)).length + a.questions.length\r\n        const x2 = (Object.keys(b.answers)).length + b.questions.length\r\n        return x2 - x1\r\n    })\r\n\r\n    return {\r\n        users,\r\n        questions,\r\n        sortedUsers\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LeaderBoard);","import React, { Component } from 'react';\r\nimport { Card, CardTitle } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport NavBar from '../../navBar/NavBar';\r\nimport './questionDetails.scss'\r\nimport { connect } from 'react-redux';\r\nimport { handleAnswerQuestion } from '../../../Actions'\r\n\r\n\r\nclass QuestionDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.target;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        if (!this.props.location.state) {\r\n            // return <Redirect to=\"/dashboard\" />\r\n            return (\r\n                <div>\r\n                    <h1>404</h1>\r\n                    <p>The page not found</p>\r\n                </div>\r\n\r\n            )\r\n        }\r\n        const questionProps_Data = this.props.location.state.questionProps\r\n        const submitVote = (e) => {\r\n            e.preventDefault()\r\n            const { dispatch } = this.props\r\n            dispatch(handleAnswerQuestion(this.props.users.loginUser, questionProps_Data.id, this.state.exampleRadios, this.props.users.loginUser))\r\n            //this.props.history.push('/questionPoll')\r\n\r\n\r\n\r\n        }\r\n        return (\r\n            <>\r\n                <NavBar />\r\n                <div className=\"container col-6 col-center\">\r\n\r\n                    <Card className=\"p-0 m-2\" >\r\n                        <CardTitle className=\"bg_colors_2 text-white fw-bold text-start p-2 \">\r\n                            {/* {props.Q.author}  */}\r\n                            {questionProps_Data.author} Asks </CardTitle>\r\n                        <div className=\"p-2\">\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"w-25 border-end border-success d-flex flex-column justify-content-center\">{questionProps_Data.author}</div>\r\n                                <div className=\"w-75\">\r\n                                    <div className=\"fw-bold bgLightColor\">Would You Rather</div>\r\n                                    <div className=\"QuestionTitle my-2\">\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <input className=\"form-check-input mx-2\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios1\"\r\n                                            value='optionOne'\r\n                                            onChange={this.handleChange} />\r\n                                        <label className=\"form-check-label\" htmlFor=\"exampleRadios1\">\r\n                                            {this.props.location.state.questionProps.optionOne?.text}\r\n                                        </label>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input className=\"form-check-input mx-2\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios2\"\r\n                                            value='optionTwo'\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                        <label className=\"form-check-label\" htmlFor=\"exampleRadios2\">\r\n                                            {this.props.location.state.questionProps.optionTwo?.text}\r\n                                        </label>\r\n                                    </div>\r\n\r\n\r\n                                    {/* <button onClick={submitVote} className=\"btn px-5\">Submit vote</button> */}\r\n\r\n                                    <button htmlFor=\"questionPoll\" onClick={submitVote} className=\"btn px-5\">\r\n                                        <Link id=\"questionPoll\" className=\"btn px-5\"\r\n                                            to={{\r\n                                                pathname: \"/questionPoll\"\r\n                                                , state: { questionProps_Data: questionProps_Data }\r\n                                            }}\r\n\r\n                                        >\r\n                                            Submit vote\r\n                                        </Link>\r\n                                    </button>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </Card>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ users }) {\r\n    return {\r\n        users,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(QuestionDetails);","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardTitle } from 'reactstrap';\r\nimport { ProgressBar, Badge } from 'react-bootstrap'\r\nimport NavBar from '../../navBar/NavBar';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst QuestionPoll = (props) => {\r\n    const questionProps_Data = props.location.state.questionProps_Data\r\n\r\n\r\n\r\n\r\n    const { author, optionOne, optionTwo } = questionProps_Data\r\n    // const { author, optionOne, optionTwo } = props\r\n\r\n    const [currentLoginUser, setCurrentLoginUser] = useState([]);\r\n    useEffect(() => {\r\n\r\n\r\n        let currentLogin = {}\r\n        Object.entries(props.users.users).forEach((userFormLoop) => {\r\n            if (userFormLoop[0] === props.users.loginUser) {\r\n                currentLogin = userFormLoop\r\n                return\r\n            }\r\n        }\r\n        )\r\n        setCurrentLoginUser(currentLogin)\r\n\r\n\r\n\r\n    }, []);\r\n\r\n    let answerMarkOp1 = questionProps_Data ? questionProps_Data.optionOne.votes.includes(props.users.loginUser) : false\r\n    let answerMarkOp2 = questionProps_Data ? questionProps_Data.optionTwo.votes.includes(props.users.loginUser) : false\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <div className=\"col-6  col-center\">\r\n                <Card className=\"p-0\" >\r\n                    <CardTitle className=\"bg-light fw-bold text-start p-2 \">{author} Asks</CardTitle>\r\n                    <div className=\"p-2\">\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            {/* <div className=\"imgAvatar border-success d-flex flex-column justify-content-center rounded-circle border\">\r\n\r\n                            </div> */}\r\n                            <div className=\"w-75\">\r\n                                <div className=\"fw-bold bgLightColor\">Would You Rather</div>\r\n                                <div className=\"QuestionTitle my-2\">\r\n                                    <div className=\"border p-2 rounded my-2\">\r\n                                        <div >\r\n                                            {answerMarkOp1 ? (\r\n                                                <Badge className=\"bg-warning\" pill variant=\"warning\">\r\n                                                    Your Vote\r\n                                                </Badge>\r\n                                            ) : ' '}\r\n                                        </div>\r\n                                        Would you rather   {optionOne.text}\r\n                                        <ProgressBar now={optionOne.votes.length / (optionOne.votes.length + optionTwo.votes.length) * 100}\r\n                                            label={`${optionOne.votes.length / (optionOne.votes.length + optionTwo.votes.length) * 100}%`} />\r\n                                    </div>\r\n                                    <div className=\"border p-2 rounded\">\r\n                                        <div>\r\n                                            {answerMarkOp2 ? (\r\n                                                <Badge className=\"bg-warning\" pill variant=\"warning\">\r\n                                                    Your Vote\r\n                                                </Badge>\r\n                                            ) : ' '}\r\n                                        </div>\r\n                                        Would you rather  {optionTwo.text}\r\n                                        <ProgressBar now={optionTwo.votes.length / (optionOne.votes.length + optionTwo.votes.length) * 100}\r\n                                            label={`${optionTwo.votes.length / (optionOne.votes.length + optionTwo.votes.length) * 100}%`} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </Card>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nfunction mapStateToProps({ users }) {\r\n    return {\r\n        users,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(QuestionPoll);\r\n\r\n","import \"./App.css\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport Login from \"./components/login/Login\";\r\nimport Home from \"./components/home/Home\";\r\nimport NewQuestion from \"./components/newQuestion/NewQuestion\";\r\nimport LeaderBoard from \"./components/leaderBoard/LeaderBoard\";\r\nimport QuestionDetails from \"./components/dashboard/questionDetails/QuestionDetails\";\r\nimport QuestionPoll from \"./components/dashboard/questionPoll/QuestionPoll\";\r\nimport { connect } from \"react-redux\";\r\nimport NotFound from \"./components/notFound/NotFound\";\r\nlet islogin;\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const user =\r\n    //props.users.loginUser &&\r\n    islogin || false;\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !user ? (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        ) : (\r\n          //handleChildFunc={handleChildFunc}\r\n          <Component {...props} user={user} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\nfunction App(props) {\r\n  islogin = props.users.loginUser;\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter basename=\"/would-you-rather-game\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login} />\r\n          {/* <Route path=\"/dashboard\" component={Dashboard} /> */}\r\n          <PrivateRoute exact path=\"/home\" component={Home} />\r\n          <PrivateRoute exact path=\"/add\" component={NewQuestion} />\r\n          <PrivateRoute exact path=\"/leaderboard\" component={LeaderBoard} />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/questions/:id\"\r\n            component={QuestionDetails}\r\n          />\r\n          <PrivateRoute exact path=\"/questionPoll\" component={QuestionPoll} />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/dashboard\"\r\n            component={Dashboard}\r\n            // handleChildFunc={this.handleChildFunc}\r\n          />\r\n\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps({ users }) {\r\n  return {\r\n    users,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import React from 'react';\r\n//import error from '../../imgs/404.jpg';\r\nimport './NotFound.scss'\r\n\r\nconst NotFound = (props) => {\r\n    return (\r\n        <div className=\"notFound\">\r\n            <h4 className=\"p-5 text-danger\">No Match for {props.location.pathname}</h4>\r\n            {/* NotFound */}\r\n            {/* <img src={error} /> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from 'redux'\r\nimport users from './users';\r\nimport questions from './questions';\r\n\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    users,\r\n    questions\r\n});","import { RECEIVE_USERS, SET_LOGIN_USER, SAVE_USER_ANSWER } from '../Actions/Users';\r\n\r\nexport default function users(state = {}, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case RECEIVE_USERS:\r\n            return {\r\n                ...state,\r\n                users: { ...action.users }\r\n            }\r\n        case SET_LOGIN_USER:\r\n\r\n            return {\r\n                ...state,\r\n                loginUser: action.loginUser\r\n            }\r\n\r\n        case SAVE_USER_ANSWER:\r\n            return {\r\n                ...state,\r\n                users: {\r\n                    ...state.users,\r\n                    [action.user]: {\r\n\r\n                        ...state.users[action.user],\r\n                        answers: {\r\n                            ...state.users[action.user].answers,\r\n                            [action.qid]: action.answer\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        // return {\r\n        //     ...state,\r\n        //     [action.user]: {\r\n        //         ...state[action.user],\r\n        //         answers: {\r\n        //             ...state.users[action.user].answers,\r\n        //             [action.qid]: action.answer\r\n        //         }\r\n        //     }\r\n        // }\r\n        default:\r\n            return state\r\n    }\r\n}","import { RECEIVE_QUESTION, ADD_QUESTION, SAVE_Q_ANSWER } from '../Actions/Questions';\r\n\r\nexport default function questions(state = {}, action) {\r\n\r\n    switch (action.type) {\r\n        case RECEIVE_QUESTION:\r\n            return {\r\n                ...state,\r\n                ...action.questions\r\n            }\r\n\r\n        case ADD_QUESTION:\r\n\r\n            return {\r\n                ...state,\r\n                [action.question.id]: action.question\r\n            }\r\n\r\n        case SAVE_Q_ANSWER:\r\n            const votes = state[action.qid][action.answer].votes\r\n\r\n            return {\r\n                ...state,\r\n                [action.qid]: {\r\n                    ...state[action.qid],\r\n                    [action.answer]: {\r\n                        ...state[action.qid][action.answer],\r\n                        votes: votes.push(action.loginUser)\r\n                    }\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","const logger = (store) => (next) => (action) => {\r\n    console.group(action.type)\r\n    console.log(\"The action\", action);\r\n    const returnValue = next(action);\r\n    console.log(\"The new state\", store.getState())\r\n    console.groupEnd()\r\n    return returnValue\r\n}\r\n\r\nexport default logger;","import thunk from 'redux-thunk';\r\nimport logger from './logger';\r\nimport { applyMiddleware } from 'redux';\r\n\r\nexport default applyMiddleware(\r\n    thunk,\r\n    logger\r\n)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { createStore, compose } from 'redux';\r\nimport { Provider, } from 'react-redux';\r\nimport reducers from './Reducers';\r\nimport middleware from './Middlewares';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n// const store = createStore(reducers, middleware)\r\n\r\nconst store = createStore(reducers, composeEnhancers(middleware));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}><App /></Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}